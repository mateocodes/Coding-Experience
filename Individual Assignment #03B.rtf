{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <iostream>\
#include <vector>\
#include <algorithm>\
using namespace std;\
\
int recursions = 0;\
int comparisons = 0;\
// Read integers from input and store them in a vector.\
// Return the vector.\
vector<int> ReadIntegers() \{\
   int size;\
   cin >> size;\
   vector<int> integers(size);\
   for (int i = 0; i < size; ++i) \{               // Read the numbers\
      cin >> integers.at(i);\
      \}\
   sort(integers.begin(), integers.end());\
   return integers;\
\}\
\
int BinarySearch(int target, vector<int> integers, int lower, int upper) \{\
   \
   while (upper >= lower)\
   \{\
      recursions++;\
      int mid = (upper + lower) / 2;\
      comparisons ++;\
    \
      if (integers.at(mid) < target) \{\
      lower = mid + 1;\
      \}\
    \
      else if (integers.at(mid) > target) \{\
      upper = mid - 1;\
      \}\
      \
      else \{\
      return mid; \
      \}\
    \
   comparisons++;\
   \}\
   comparisons--;\
   return -1; \
   \
\}\
\
int main() \{\
   int target;\
   int index;\
\
   vector<int> integers = ReadIntegers();\
\
   cin >> target;\
\
   index = BinarySearch(target, integers, 0, integers.size() - 1);\
   printf("index: %d, recursions: %d, comparisons: %d\\n",\
          index, recursions, comparisons);\
\
   return 0;\
\}\
}